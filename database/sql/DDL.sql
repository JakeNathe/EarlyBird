-- -----------------------------------------------------
-- Data Definition Query File
-- Project: Early Bird Rental
-- Group: 52
-- Group Members:
--     Jake Nathe
--     Megan Wooley
--
-- MySQL Script generated by MySQL Workbench through Forward
-- Engineering of the data model (V3) and modified by J. Nathe
-- and M. Wooley
--
-- Generated: 10/23/2023
-- Last Modified: 11/01/2023
-- -----------------------------------------------------

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SET AUTOCOMMIT = 0;

-- -----------------------------------------------------
-- *** Change this so it matches your schema name! ***
-- Set Schema
-- -----------------------------------------------------
USE cs340_nathej;


-- -----------------------------------------------------
-- Table Languages
-- Primary key languageID
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Languages (
  languageID INT NOT NULL AUTO_INCREMENT UNIQUE,
  name VARCHAR(50) NOT NULL,
  PRIMARY KEY (languageID)
);

-- -----------------------------------------------------
-- Insert data into Languages
-- -----------------------------------------------------
INSERT INTO Languages (
  name
)
VALUES
('English'),
('Spanish'),
('Russian'),
('Japanese'),
('German');


-- -----------------------------------------------------
-- Table Genres
-- Primary key genreID
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Genres (
  genreID INT NOT NULL AUTO_INCREMENT UNIQUE,
  name VARCHAR(50) NOT NULL,
  PRIMARY KEY (genreID)
);

-- -----------------------------------------------------
-- Insert data into Genres
-- -----------------------------------------------------
INSERT INTO Genres (
  name
)
VALUES
('Mystery'),
('Science Fiction'),
('Fantasy'),
('Romance'),
('Thriller'),
('Fiction'),
('Non-Fiction'),
('Historical'),
('Action & Adventure'),
('Horror');


-- -----------------------------------------------------
-- Table Books
-- Primary key bookID + FK from Languages
  -- CONSTRAINT FK_Books_Languages line92
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Books (
  bookID INT NOT NULL AUTO_INCREMENT UNIQUE,
  title VARCHAR(50) NOT NULL,
  author VARCHAR(50) NOT NULL,
  publishedYear INT NOT NULL,
  languageID INT,
  totalCopies INT NOT NULL DEFAULT 0,
  PRIMARY KEY (bookID),
  CONSTRAINT FK_Books_Languages
    FOREIGN KEY (languageID)
    REFERENCES Languages (languageID)
    ON DELETE SET NULL
);

-- -----------------------------------------------------
-- Insert data into Books
-- -----------------------------------------------------
INSERT INTO Books (
  title,
  author,
  publishedYear,
  languageID,
  totalCopies
)
VALUES
(
  'Hard-Boiled Wonderland and the End of the World',
  'Haruki Murakami',
  1985,
  (SELECT languageID from Languages where name = 'Japanese'),
  5
),
(
  'The Death of Ivan Ilyich',
  'Leo Tolstoy',
  1886,
  (SELECT languageID from Languages where name = 'Russian'),
  3
),
(
  'Catch-22',
  'Joseph Heller',
  1961,
  (SELECT languageID from Languages where name = 'English'),
  5
),
(
  'The Hunger Games',
  'Suzanne Collins',
  2008,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Catching Fire',
  'Suzanne Collins',
  2009,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Mockingjay',
  'Suzanne Collins',
  2010,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Bluest Eye',
  'Toni Morrison',
  1970,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Life of Pi',
  'Yann Martel',
  2001,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Martian',
  'Andy Weir',
  2011,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Long Walk',
  'Stephen King',
  1979,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Ready Player One',
  'Ernest Cline',
  2011,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Silent Patient',
  'Alex Michaelides',
  2019,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  '1984',
  'George Orwell',
  1949,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Ocean at the End of the Lane',
  'Neil Gaiman',
  2013,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Where the Crawdads Sing',
  'Delia Owens',
  2018,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  "Ender's Game",
  'Orson Scott Card',
  1985,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'The Catcher in the Rye',
  'J.D. Salinger',
  1951,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  'Of Mice and Men',
  'John Steinbeck',
  1937,
  (SELECT languageID from Languages where name = 'English'),
  10
),
(
  "The Handmaid's Tale",
  'Margaret Atwood',
  1985,
  (SELECT languageID from Languages where name = 'English'),
  10
);


-- -----------------------------------------------------
-- Table BookGenres
-- Intersection table between Books and Genres
-- Primary key composite bookID + genreID
-- -----------------------------------------------------
CREATE OR REPLACE TABLE BookGenres (
  bookID INT NOT NULL,
  genreID INT NOT NULL,
  PRIMARY KEY (bookID, genreID),
  CONSTRAINT FK_BookGenres_Movies
    FOREIGN KEY (bookID)
    REFERENCES Books (bookID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT FK_BookGenres_Genres
    FOREIGN KEY (genreID)
    REFERENCES Genres (genreID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- -----------------------------------------------------
-- Insert data into BookGenres
-- -----------------------------------------------------
INSERT INTO BookGenres (
  bookID,
  genreID
)
VALUES
(
    (SELECT bookID from Books where title = 'Hard-Boiled Wonderland and the End of the World'),
    (SELECT genreID from Genres where name = 'Science Fiction')
),
(
    (SELECT bookID from Books where title = 'Hard-Boiled Wonderland and the End of the World'),
    (SELECT genreID from Genres where name = 'Fantasy')
),
(
    (SELECT bookID from Books where title = 'The Death of Ivan Ilyich'),
    (SELECT genreID from Genres where name = 'Fiction')
),
(
    (SELECT bookID from Books where title = 'Catch-22'),
    (SELECT genreID from Genres where name = 'Fiction')
),
(
    (SELECT bookID from Books where title = 'Catch-22'),
    (SELECT genreID from Genres where name = 'Historical')
),
(
    (SELECT bookID from Books where title = 'Catch-22'),
    (SELECT genreID from Genres where name = 'Dark Comedy')
),
(
    (SELECT bookID from Books where title = 'The Hunger Games'),
    (SELECT genreID from Genres where name = 'Fiction')
)
;


-- -----------------------------------------------------
-- Table Customers
-- Primary key customerID
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Customers (
  customerID INT NOT NULL AUTO_INCREMENT UNIQUE,
  firstName VARCHAR(50) NOT NULL,
  lastName VARCHAR(50) NOT NULL,
  birthdate DATE NOT NULL,
  email VARCHAR(50) NOT NULL,
  PRIMARY KEY (customerID)
);

-- -----------------------------------------------------
-- Insert data into Customers
-- Random people created with randomuser.me/api
-- -----------------------------------------------------
INSERT INTO Customers (
  firstName,
  lastName,
  birthdate,
  email
)
VALUES
(
  'Robbie',
  'Johnson',
  '1993-07-27',
  'R.Johnson@gmail.com'
),
(
  'Leeroy',
  'Jenkins',
  '1981-04-22',
  'LJ@gmail.com'
),
(
  'Ladia',
  'Williams',
  '1999-01-02',
  'Willimas552@yahoo.com'
),
(
  'Chris',
  'Reed',
  '2000-01-06',
  'ChrisReed@gmail.com'
),
(
  'Jalen',
  'Carter',
  '2001-04-04',
  'J.Carter2001@gmail.com'
),
(
  'Daphne',
  'Wyman',
  '1976-06-19',
  'DW2016@gmail.com'
),
(
  'Terresa',
  'Ryan',
  '1965-05-07',
  'DW2016@gmail.com'
);



-- -----------------------------------------------------
-- Table Employees
-- Primary key employeeID
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Employees (
  employeeID INT NOT NULL AUTO_INCREMENT UNIQUE,
  firstName VARCHAR(50) NOT NULL,
  lastName VARCHAR(50) NOT NULL,
  PRIMARY KEY (employeeID)
);

-- -----------------------------------------------------
-- Insert data into Employees
-- Random people created with randomuser.me/api
-- -----------------------------------------------------
INSERT INTO Employees (
  firstName,
  lastName
)
VALUES
(
  'Benjamin',
  'Garcia'
),
(
  'Jack',
  'Davis'
),
(
  'Helena',
  'Arias'
);


-- -----------------------------------------------------
-- Table Rentals
-- Primary key rentalID + FK from Employees, Customers, and Books
-- -----------------------------------------------------
CREATE OR REPLACE TABLE Rentals (
  rentalID INT NOT NULL AUTO_INCREMENT UNIQUE,
  employeeID INT NOT NULL,
  bookID INT NOT NULL,
  customerID INT NOT NULL,
  startDate DATE NOT NULL,
  lateReturnDate DATE NOT NULL,
  endDate DATE NULL DEFAULT NULL,
  rate FLOAT NOT NULL,
  PRIMARY KEY (rentalID, employeeID, bookID, customerID),
  CONSTRAINT FK_Rentals_Customers
    FOREIGN KEY (customerID)
    REFERENCES Customers (customerID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT FK_Rentals_Employees
    FOREIGN KEY (employeeID)
    REFERENCES Employees (employeeID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT FK_Rentals_Books
    FOREIGN KEY (bookID)
    REFERENCES Books (bookID)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

-- -----------------------------------------------------
-- Insert data into Rentals
-- -----------------------------------------------------
INSERT INTO Rentals (
  employeeID,
  bookID,
  customerID,
  startDate,
  lateReturnDate,
  rate
)
VALUES
(
  (SELECT employeeID from Employees where firstName = 'Antonija' AND lastName = 'Ivić'),
  (SELECT bookID from Books where title = 'Catch-22'),
  (SELECT customerID from Customers where firstName = 'Nurdan' AND lastName = 'Adal'),
  '2023-03-12',
  (SELECT DATE_ADD('2023-03-12', INTERVAL 14 DAY)),
  3
),
(
  (SELECT employeeID from Employees where firstName = 'Antonija' AND lastName = 'Ivić'),
  (SELECT bookID from Books where title = 'Hard-Boiled Wonderland and the End of the World'),
  (SELECT customerID from Customers where firstName = 'Vilma' AND lastName = 'das Neves'),
  '2023-06-30',
  (SELECT DATE_ADD('2023-06-30', INTERVAL 14 DAY)),
  3
),
(
  (SELECT employeeID from Employees where firstName = 'Helena' AND lastName = 'Arias'),
  (SELECT bookID from Books where title = 'Catch-22'),
  (SELECT customerID from Customers where firstName = 'Vilma' AND lastName = 'das Neves'),
  '2023-06-30',
  (SELECT DATE_ADD('2023-06-30', INTERVAL 14 DAY)),
  3
);

-- -----------------------------------------------------
-- Update end date in Rentals
-- If multiple rentals exist for the book and customer
-- combination, update the endDate for the oldest rental.
-- No one will escape late fees... NO ONE
-- -----------------------------------------------------
UPDATE Rentals
SET endDate = '2023-07-10' WHERE
bookID = (SELECT bookID from Books where title = 'Hard-Boiled Wonderland and the End of the World') AND
customerID = (SELECT customerID from Customers where firstName = 'Vilma' AND lastName = 'das Neves')
ORDER BY startDate ASC
LIMIT 1;

UPDATE Rentals
SET endDate = '2023-07-16' WHERE
bookID = (SELECT bookID from Books where title = 'Catch-22') AND
customerID = (SELECT customerID from Customers where firstName = 'Vilma' AND lastName = 'das Neves')
ORDER BY startDate ASC
LIMIT 1;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
COMMIT;
